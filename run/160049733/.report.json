{"created": 1607302288.1150815, "duration": 0.19537925720214844, "exitcode": 1, "root": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/160049733", "environment": {"Python": "3.9.0", "Platform": "Linux-5.9.11-arch2-1-x86_64-with-glibc2.32", "Packages": {"pytest": "6.1.2", "py": "1.9.0", "pluggy": "0.13.1"}, "Plugins": {"json-report": "1.2.4", "metadata": "1.11.0", "hypothesis": "5.41.4"}}, "summary": {"passed": 10, "failed": 2, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test_parser.py", "type": "Module"}]}, {"nodeid": "test_parser.py::TestAnalisadorSintatico", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_elementos_atomicos", "type": "Function", "lineno": 69}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_simples", "type": "Function", "lineno": 81}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_aninhadas", "type": "Function", "lineno": 85}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_valor_com_quote", "type": "Function", "lineno": 89}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_listas_desalinhadas", "type": "Function", "lineno": 94}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_quotes_inv\u00e1lidos", "type": "Function", "lineno": 99}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_elementos_atomicos", "type": "Function", "lineno": 104}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_listas", "type": "Function", "lineno": 112}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_quotes", "type": "Function", "lineno": 116}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_chars", "type": "Function", "lineno": 120}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_inclui_comando_begin_em_sequencia_de_comandos", "type": "Function", "lineno": 125}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_programa_completo_com_coment\u00e1rio", "type": "Function", "lineno": 133}]}, {"nodeid": "test_parser.py::TestAnalisadorSintatico", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico", "type": "Instance"}]}, {"nodeid": "test_parser.py", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico", "type": "Class"}]}], "tests": [{"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_elementos_atomicos", "lineno": 69, "outcome": "passed", "keywords": ["test_aceita_elementos_atomicos", "test_parser.py", "TestAnalisadorSintatico", "()", "160049733"], "setup": {"duration": 0.0003616129979491234, "outcome": "passed"}, "call": {"duration": 0.04843777697533369, "outcome": "passed"}, "teardown": {"duration": 0.0002687090018298477, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_simples", "lineno": 81, "outcome": "passed", "keywords": ["test_parser.py", "TestAnalisadorSintatico", "test_aceita_listas_simples", "()", "160049733"], "setup": {"duration": 0.0002859130036085844, "outcome": "passed"}, "call": {"duration": 0.0031388770148623735, "outcome": "passed"}, "teardown": {"duration": 0.0003027660131920129, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_aninhadas", "lineno": 85, "outcome": "passed", "keywords": ["test_parser.py", "test_aceita_listas_aninhadas", "TestAnalisadorSintatico", "()", "160049733"], "setup": {"duration": 0.0002538459957577288, "outcome": "passed"}, "call": {"duration": 0.0067460980208124965, "outcome": "passed"}, "teardown": {"duration": 0.00029611599165946245, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_valor_com_quote", "lineno": 89, "outcome": "passed", "keywords": ["test_aceita_valor_com_quote", "test_parser.py", "TestAnalisadorSintatico", "()", "160049733"], "setup": {"duration": 0.00037172401789575815, "outcome": "passed"}, "call": {"duration": 0.0032200629939325154, "outcome": "passed"}, "teardown": {"duration": 0.0003472969983704388, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_listas_desalinhadas", "lineno": 94, "outcome": "passed", "keywords": ["test_parser.py", "TestAnalisadorSintatico", "()", "160049733", "test_rejeita_listas_desalinhadas"], "setup": {"duration": 0.00038032198790460825, "outcome": "passed"}, "call": {"duration": 0.0021662969957105815, "outcome": "passed"}, "teardown": {"duration": 0.0003279999946244061, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_quotes_inv\u00e1lidos", "lineno": 99, "outcome": "passed", "keywords": ["test_parser.py", "TestAnalisadorSintatico", "()", "160049733", "test_rejeita_quotes_inv\u00e1lidos"], "setup": {"duration": 0.00038287698407657444, "outcome": "passed"}, "call": {"duration": 0.0017280669999308884, "outcome": "passed"}, "teardown": {"duration": 0.0003463219909463078, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_elementos_atomicos", "lineno": 104, "outcome": "passed", "keywords": ["test_converte_elementos_atomicos", "test_parser.py", "TestAnalisadorSintatico", "()", "160049733"], "setup": {"duration": 0.00036203800118528306, "outcome": "passed"}, "call": {"duration": 0.004217520996462554, "outcome": "passed"}, "teardown": {"duration": 0.0003788089961744845, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_listas", "lineno": 112, "outcome": "passed", "keywords": ["test_parser.py", "TestAnalisadorSintatico", "()", "160049733", "test_converte_listas"], "setup": {"duration": 0.0004326659836806357, "outcome": "passed"}, "call": {"duration": 0.004154342983383685, "outcome": "passed"}, "teardown": {"duration": 0.0003300099924672395, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_quotes", "lineno": 116, "outcome": "passed", "keywords": ["test_parser.py", "TestAnalisadorSintatico", "()", "160049733", "test_converte_quotes"], "setup": {"duration": 0.0003684690163936466, "outcome": "passed"}, "call": {"duration": 0.0030335299961734563, "outcome": "passed", "stdout": "====<<<\n[1, 2, 3]\n====<<<\nSymbol(value='symbol')\n"}, "teardown": {"duration": 0.0003431249933782965, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_chars", "lineno": 120, "outcome": "passed", "keywords": ["test_parser.py", "TestAnalisadorSintatico", "test_converte_chars", "()", "160049733"], "setup": {"duration": 0.0003734240017365664, "outcome": "passed"}, "call": {"duration": 0.002061464008875191, "outcome": "passed"}, "teardown": {"duration": 0.00032750499667599797, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_inclui_comando_begin_em_sequencia_de_comandos", "lineno": 125, "outcome": "failed", "keywords": ["test_parser.py", "TestAnalisadorSintatico", "()", "160049733", "test_inclui_comando_begin_em_sequencia_de_comandos"], "setup": {"duration": 0.0003991900011897087, "outcome": "passed"}, "call": {"duration": 0.003316828020615503, "outcome": "failed", "crash": {"path": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/160049733/test_parser.py", "lineno": 127, "message": "AssertionError: assert [[Symbol(valu...ue='cmd'), 2]] == [Symbol(value...ue='cmd'), 2]]\n  At index 0 diff: [Symbol(value='cmd'), 1] != Symbol(value='begin')\n  Right contains one more item: [Symbol(value='cmd'), 2]\n  Use -v to get the full diff"}, "traceback": [{"path": "test_parser.py", "lineno": 127, "message": "AssertionError"}], "longrepr": "self = <test_parser.TestAnalisadorSintatico object at 0x7f0a8cea11f0>\n\n    def test_inclui_comando_begin_em_sequencia_de_comandos(self):\n>       assert value(\"(cmd 1)\\n(cmd 2)\") == [\n            symbol(\"begin\"),\n            [symbol(\"cmd\"), 1],\n            [symbol(\"cmd\"), 2],\n        ]\nE       AssertionError: assert [[Symbol(valu...ue='cmd'), 2]] == [Symbol(value...ue='cmd'), 2]]\nE         At index 0 diff: [Symbol(value='cmd'), 1] != Symbol(value='begin')\nE         Right contains one more item: [Symbol(value='cmd'), 2]\nE         Use -v to get the full diff\n\ntest_parser.py:127: AssertionError"}, "teardown": {"duration": 0.00041554600466042757, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_programa_completo_com_coment\u00e1rio", "lineno": 133, "outcome": "failed", "keywords": ["test_parser.py", "TestAnalisadorSintatico", "()", "160049733", "test_aceita_programa_completo_com_coment\u00e1rio"], "setup": {"duration": 0.0003627050027716905, "outcome": "passed"}, "call": {"duration": 0.011375517002306879, "outcome": "failed", "crash": {"path": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/160049733/test_parser.py", "lineno": 147, "message": "AssertionError: assert [[Symbol(valu...e='fat'), 5]]] == [Symbol(value...e='fat'), 5]]]\n  At index 0 diff: [Symbol(value='define'), Symbol(value='fat'), [Symbol(value='lambda'), [Symbol(value='n')], [Symbol(value='if'), [Symbol(value='<='), Symbol(value='n'), 1], 1, [Symbol(value='*'), Symbol(value='n'), [Symbol(value='fat'), [Symbol(value='-'), Symbol(value='n'), 1]]]]]] != Symbol(value='begin')\n  Right contains one more item: [Symbol(value='print'), [Symbol(value='fat'), 5]]\n  Use -v to get the full diff"}, "traceback": [{"path": "test_parser.py", "lineno": 147, "message": "AssertionError"}], "stdout": "Testando comando\n\n        ;; Fatorial\n        (define fat (lambda (n) \n            (if (<= n 1)\n                1\n                (* n (fat (- n 1))))))\n\n        (print (fat 5))\n        \n", "longrepr": "self = <test_parser.TestAnalisadorSintatico object at 0x7f0a8ce49be0>\n\n    def test_aceita_programa_completo_com_coment\u00e1rio(self):\n        src = \"\"\"\n        ;; Fatorial\n        (define fat (lambda (n)\n            (if (<= n 1)\n                1\n                (* n (fat (- n 1))))))\n    \n        (print (fat 5))\n        \"\"\"\n        print(\"Testando comando\")\n        print(src)\n        s = symbol\n>       assert value(src) == [\n            s(\"begin\"),\n            [\n                s(\"define\"),\n                s(\"fat\"),\n                [\n                    s(\"lambda\"),\n                    [s(\"n\")],\n                    [\n                        s(\"if\"),\n                        [s(\"<=\"), s(\"n\"), 1],\n                        1,\n                        [s(\"*\"), s(\"n\"), [s(\"fat\"), [s(\"-\"), s(\"n\"), 1]]],\n                    ],\n                ],\n            ],\n            [s(\"print\"), [s(\"fat\"), 5]],\n        ]\nE       AssertionError: assert [[Symbol(valu...e='fat'), 5]]] == [Symbol(value...e='fat'), 5]]]\nE         At index 0 diff: [Symbol(value='define'), Symbol(value='fat'), [Symbol(value='lambda'), [Symbol(value='n')], [Symbol(value='if'), [Symbol(value='<='), Symbol(value='n'), 1], 1, [Symbol(value='*'), Symbol(value='n'), [Symbol(value='fat'), [Symbol(value='-'), Symbol(value='n'), 1]]]]]] != Symbol(value='begin')\nE         Right contains one more item: [Symbol(value='print'), [Symbol(value='fat'), 5]]\nE         Use -v to get the full diff\n\ntest_parser.py:147: AssertionError"}, "teardown": {"duration": 0.00039971500518731773, "outcome": "passed"}}]}