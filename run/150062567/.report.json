{"created": 1607302281.6317713, "duration": 0.25173258781433105, "exitcode": 1, "root": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/150062567", "environment": {"Python": "3.9.0", "Platform": "Linux-5.9.11-arch2-1-x86_64-with-glibc2.32", "Packages": {"pytest": "6.1.2", "py": "1.9.0", "pluggy": "0.13.1"}, "Plugins": {"json-report": "1.2.4", "metadata": "1.11.0", "hypothesis": "5.41.4"}}, "summary": {"passed": 10, "failed": 2, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test_parser.py", "type": "Module"}]}, {"nodeid": "test_parser.py::TestAnalisadorSintatico", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_elementos_atomicos", "type": "Function", "lineno": 69}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_simples", "type": "Function", "lineno": 81}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_aninhadas", "type": "Function", "lineno": 85}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_valor_com_quote", "type": "Function", "lineno": 89}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_listas_desalinhadas", "type": "Function", "lineno": 94}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_quotes_inv\u00e1lidos", "type": "Function", "lineno": 99}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_elementos_atomicos", "type": "Function", "lineno": 104}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_listas", "type": "Function", "lineno": 112}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_quotes", "type": "Function", "lineno": 116}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_chars", "type": "Function", "lineno": 120}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_inclui_comando_begin_em_sequencia_de_comandos", "type": "Function", "lineno": 125}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_programa_completo_com_coment\u00e1rio", "type": "Function", "lineno": 133}]}, {"nodeid": "test_parser.py::TestAnalisadorSintatico", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico", "type": "Instance"}]}, {"nodeid": "test_parser.py", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico", "type": "Class"}]}], "tests": [{"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_elementos_atomicos", "lineno": 69, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "()", "test_parser.py", "test_aceita_elementos_atomicos", "150062567"], "setup": {"duration": 0.0004097259952686727, "outcome": "passed"}, "call": {"duration": 0.053936682001221925, "outcome": "passed"}, "teardown": {"duration": 0.00034024802152998745, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_simples", "lineno": 81, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "()", "test_parser.py", "test_aceita_listas_simples", "150062567"], "setup": {"duration": 0.0002822820097208023, "outcome": "passed"}, "call": {"duration": 0.0054933479987084866, "outcome": "passed"}, "teardown": {"duration": 0.00030274700839072466, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_aninhadas", "lineno": 85, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "()", "test_parser.py", "150062567", "test_aceita_listas_aninhadas"], "setup": {"duration": 0.0002825890260282904, "outcome": "passed"}, "call": {"duration": 0.014129878021776676, "outcome": "passed"}, "teardown": {"duration": 0.0004669710178859532, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_valor_com_quote", "lineno": 89, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "()", "test_parser.py", "150062567", "test_aceita_valor_com_quote"], "setup": {"duration": 0.0003629649872891605, "outcome": "passed"}, "call": {"duration": 0.006762093980796635, "outcome": "passed"}, "teardown": {"duration": 0.00042545501491986215, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_listas_desalinhadas", "lineno": 94, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_rejeita_listas_desalinhadas", "()", "test_parser.py", "150062567"], "setup": {"duration": 0.0003780449915211648, "outcome": "passed"}, "call": {"duration": 0.0035811270063277334, "outcome": "passed"}, "teardown": {"duration": 0.0003788519825320691, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_quotes_inv\u00e1lidos", "lineno": 99, "outcome": "failed", "keywords": ["TestAnalisadorSintatico", "test_rejeita_quotes_inv\u00e1lidos", "()", "test_parser.py", "150062567"], "setup": {"duration": 0.0003917989961337298, "outcome": "passed"}, "call": {"duration": 0.0015780649846419692, "outcome": "failed", "crash": {"path": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/150062567/test_parser.py", "lineno": 101, "message": "assert False\n +  where False = rejects(\"'foo'\")"}, "traceback": [{"path": "test_parser.py", "lineno": 101, "message": "AssertionError"}], "longrepr": "self = <test_parser.TestAnalisadorSintatico object at 0x7fb1cd5a6040>\n\n    def test_rejeita_quotes_inv\u00e1lidos(self):\n>       assert rejects(\"'foo'\")\nE       assert False\nE        +  where False = rejects(\"'foo'\")\n\ntest_parser.py:101: AssertionError"}, "teardown": {"duration": 0.00045353700988925993, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_elementos_atomicos", "lineno": 104, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "()", "test_parser.py", "150062567", "test_converte_elementos_atomicos"], "setup": {"duration": 0.00028499800828285515, "outcome": "passed"}, "call": {"duration": 0.0045922500139568, "outcome": "passed"}, "teardown": {"duration": 0.00039425501017831266, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_listas", "lineno": 112, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "()", "test_converte_listas", "150062567"], "setup": {"duration": 0.0003597819886635989, "outcome": "passed"}, "call": {"duration": 0.010074051999254152, "outcome": "passed"}, "teardown": {"duration": 0.00041154702194035053, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_quotes", "lineno": 116, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "()", "150062567", "test_converte_quotes"], "setup": {"duration": 0.0004007359966635704, "outcome": "passed"}, "call": {"duration": 0.005852923990460113, "outcome": "passed"}, "teardown": {"duration": 0.00039438100066035986, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_chars", "lineno": 120, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "()", "test_parser.py", "150062567", "test_converte_chars"], "setup": {"duration": 0.0004028310067951679, "outcome": "passed"}, "call": {"duration": 0.002606050984468311, "outcome": "passed"}, "teardown": {"duration": 0.0004076340119354427, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_inclui_comando_begin_em_sequencia_de_comandos", "lineno": 125, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_inclui_comando_begin_em_sequencia_de_comandos", "()", "test_parser.py", "150062567"], "setup": {"duration": 0.00039671899867244065, "outcome": "passed"}, "call": {"duration": 0.00877684901934117, "outcome": "passed"}, "teardown": {"duration": 0.00042046300950460136, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_programa_completo_com_coment\u00e1rio", "lineno": 133, "outcome": "failed", "keywords": ["TestAnalisadorSintatico", "test_aceita_programa_completo_com_coment\u00e1rio", "()", "test_parser.py", "150062567"], "setup": {"duration": 0.0003551460104063153, "outcome": "passed"}, "call": {"duration": 0.029262180003570393, "outcome": "failed", "crash": {"path": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/150062567/test_parser.py", "lineno": 147, "message": "AssertionError: assert [Symbol(value...'fat'), 5.0]]] == [Symbol(value...e='fat'), 5]]]\n  At index 1 diff: [Symbol(value='define'), Symbol(value='fat'), [Symbol(value='lambda'), [Symbol(value='n')], [Symbol(value='if'), [Symbol(value='<'), Symbol(value='='), Symbol(value='n'), 1.0], 1.0, [Symbol(value='*'), Symbol(value='n'), [Symbol(value='fat'), [Symbol(value='-'), Symbol(value='n'), 1.0]]]]]] != [Symbol(value='define'), Symbol(value='fat'), [Symbol(value='lambda'), [Symbol(value='n')], [Symbol(value='if'), [Symbol(value='<='), Symbol(value='n'), 1], 1, [Symbol(value='*'), Symbol(value='n'), [Symbol(value='fat'), [Symbol(value='-'), Symbol(value='n'), 1]]]...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show"}, "traceback": [{"path": "test_parser.py", "lineno": 147, "message": "AssertionError"}], "stdout": "Testando comando\n\n        ;; Fatorial\n        (define fat (lambda (n) \n            (if (<= n 1)\n                1\n                (* n (fat (- n 1))))))\n\n        (print (fat 5))\n        \n", "longrepr": "self = <test_parser.TestAnalisadorSintatico object at 0x7fb1cd608c10>\n\n    def test_aceita_programa_completo_com_coment\u00e1rio(self):\n        src = \"\"\"\n        ;; Fatorial\n        (define fat (lambda (n)\n            (if (<= n 1)\n                1\n                (* n (fat (- n 1))))))\n    \n        (print (fat 5))\n        \"\"\"\n        print(\"Testando comando\")\n        print(src)\n        s = symbol\n>       assert value(src) == [\n            s(\"begin\"),\n            [\n                s(\"define\"),\n                s(\"fat\"),\n                [\n                    s(\"lambda\"),\n                    [s(\"n\")],\n                    [\n                        s(\"if\"),\n                        [s(\"<=\"), s(\"n\"), 1],\n                        1,\n                        [s(\"*\"), s(\"n\"), [s(\"fat\"), [s(\"-\"), s(\"n\"), 1]]],\n                    ],\n                ],\n            ],\n            [s(\"print\"), [s(\"fat\"), 5]],\n        ]\nE       AssertionError: assert [Symbol(value...'fat'), 5.0]]] == [Symbol(value...e='fat'), 5]]]\nE         At index 1 diff: [Symbol(value='define'), Symbol(value='fat'), [Symbol(value='lambda'), [Symbol(value='n')], [Symbol(value='if'), [Symbol(value='<'), Symbol(value='='), Symbol(value='n'), 1.0], 1.0, [Symbol(value='*'), Symbol(value='n'), [Symbol(value='fat'), [Symbol(value='-'), Symbol(value='n'), 1.0]]]]]] != [Symbol(value='define'), Symbol(value='fat'), [Symbol(value='lambda'), [Symbol(value='n')], [Symbol(value='if'), [Symbol(value='<='), Symbol(value='n'), 1], 1, [Symbol(value='*'), Symbol(value='n'), [Symbol(value='fat'), [Symbol(value='-'), Symbol(value='n'), 1]]]...\nE         \nE         ...Full output truncated (2 lines hidden), use '-vv' to show\n\ntest_parser.py:147: AssertionError"}, "teardown": {"duration": 0.0004188339808024466, "outcome": "passed"}}]}