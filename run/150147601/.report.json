{"created": 1607302284.1919725, "duration": 0.1627669334411621, "exitcode": 0, "root": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/150147601", "environment": {"Python": "3.9.0", "Platform": "Linux-5.9.11-arch2-1-x86_64-with-glibc2.32", "Packages": {"pytest": "6.1.2", "py": "1.9.0", "pluggy": "0.13.1"}, "Plugins": {"json-report": "1.2.4", "metadata": "1.11.0", "hypothesis": "5.41.4"}}, "summary": {"passed": 12, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test_parser.py", "type": "Module"}]}, {"nodeid": "test_parser.py::TestAnalisadorSintatico", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_elementos_atomicos", "type": "Function", "lineno": 69}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_simples", "type": "Function", "lineno": 81}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_aninhadas", "type": "Function", "lineno": 85}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_valor_com_quote", "type": "Function", "lineno": 89}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_listas_desalinhadas", "type": "Function", "lineno": 94}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_quotes_inv\u00e1lidos", "type": "Function", "lineno": 99}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_elementos_atomicos", "type": "Function", "lineno": 104}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_listas", "type": "Function", "lineno": 112}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_quotes", "type": "Function", "lineno": 116}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_chars", "type": "Function", "lineno": 120}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_inclui_comando_begin_em_sequencia_de_comandos", "type": "Function", "lineno": 125}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_programa_completo_com_coment\u00e1rio", "type": "Function", "lineno": 133}]}, {"nodeid": "test_parser.py::TestAnalisadorSintatico", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico", "type": "Instance"}]}, {"nodeid": "test_parser.py", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico", "type": "Class"}]}], "tests": [{"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_elementos_atomicos", "lineno": 69, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "()", "test_aceita_elementos_atomicos", "test_parser.py"], "setup": {"duration": 0.00035382501664571464, "outcome": "passed"}, "call": {"duration": 0.058809131995076314, "outcome": "passed", "stdout": "Tree('start', [Tree('number', [Token('NUMBER', '42')]), Tree('list_', [Tree('number', [Token('NUMBER', '1')]), Tree('number', [Token('NUMBER', '2')]), Tree('number', [Token('NUMBER', '3')])]), Tree('list_', [Tree('name', [Token('NAME', 'let')]), Tree('list_', [Tree('list_', [Tree('name', [Token('NAME', 'x')]), Tree('number', [Token('NUMBER', '1')])]), Tree('list_', [Tree('name', [Token('NAME', 'y')]), Tree('number', [Token('NUMBER', '2')])])]), Tree('list_', [Tree('symbol', [Token('SYMBOL', '+')]), Tree('name', [Token('NAME', 'x')]), Tree('name', [Token('NAME', 'y')])])]), Tree('quote', [Tree('quote', [Tree('name', [Token('NAME', 'double-quote')])])])])\n[Token('NUMBER', '42'), Token('LPAR', '('), Token('NUMBER', '1'), Token('NUMBER', '2'), Token('NUMBER', '3'), Token('RPAR', ')'), Token('LPAR', '('), Token('NAME', 'let'), Token('LPAR', '('), Token('LPAR', '('), Token('NAME', 'x'), Token('NUMBER', '1'), Token('RPAR', ')'), Token('LPAR', '('), Token('NAME', 'y'), Token('NUMBER', '2'), Token('RPAR', ')'), Token('RPAR', ')'), Token('LPAR', '('), Token('SYMBOL', '+'), Token('NAME', 'x'), Token('NAME', 'y'), Token('RPAR', ')'), Token('RPAR', ')'), Token('QUOTE', \"'\"), Token('QUOTE', \"'\"), Token('NAME', 'double-quote')]\n"}, "teardown": {"duration": 0.00036286801332607865, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_simples", "lineno": 81, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "test_aceita_listas_simples", "()", "test_parser.py"], "setup": {"duration": 0.00028496398590505123, "outcome": "passed"}, "call": {"duration": 0.0032709410006646067, "outcome": "passed"}, "teardown": {"duration": 0.0002767600235529244, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_aninhadas", "lineno": 85, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "test_aceita_listas_aninhadas", "()", "test_parser.py"], "setup": {"duration": 0.00026510999305173755, "outcome": "passed"}, "call": {"duration": 0.006198693998157978, "outcome": "passed"}, "teardown": {"duration": 0.000319882994517684, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_valor_com_quote", "lineno": 89, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "()", "test_aceita_valor_com_quote", "test_parser.py"], "setup": {"duration": 0.0002943539875559509, "outcome": "passed"}, "call": {"duration": 0.003938285983167589, "outcome": "passed"}, "teardown": {"duration": 0.0002798569912556559, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_listas_desalinhadas", "lineno": 94, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "test_rejeita_listas_desalinhadas", "()", "test_parser.py"], "setup": {"duration": 0.00029734900454059243, "outcome": "passed"}, "call": {"duration": 0.001956085005076602, "outcome": "passed"}, "teardown": {"duration": 0.0002653980045579374, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_quotes_inv\u00e1lidos", "lineno": 99, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "test_rejeita_quotes_inv\u00e1lidos", "()", "test_parser.py"], "setup": {"duration": 0.00028681301046162844, "outcome": "passed"}, "call": {"duration": 0.001692245015874505, "outcome": "passed"}, "teardown": {"duration": 0.00026408699341118336, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_elementos_atomicos", "lineno": 104, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "test_converte_elementos_atomicos", "()", "test_parser.py"], "setup": {"duration": 0.00027607998345047235, "outcome": "passed"}, "call": {"duration": 0.0033338319917675108, "outcome": "passed"}, "teardown": {"duration": 0.0003469610237516463, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_listas", "lineno": 112, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "test_converte_listas", "()", "test_parser.py"], "setup": {"duration": 0.000334309006575495, "outcome": "passed"}, "call": {"duration": 0.004456724011106417, "outcome": "passed"}, "teardown": {"duration": 0.0002964430022984743, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_quotes", "lineno": 116, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "()", "test_converte_quotes", "test_parser.py"], "setup": {"duration": 0.0002802950039040297, "outcome": "passed"}, "call": {"duration": 0.002759076014626771, "outcome": "passed"}, "teardown": {"duration": 0.0002615569974295795, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_chars", "lineno": 120, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "()", "test_parser.py", "test_converte_chars"], "setup": {"duration": 0.0002694340073503554, "outcome": "passed"}, "call": {"duration": 0.0017835489998105913, "outcome": "passed"}, "teardown": {"duration": 0.00027419300749897957, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_inclui_comando_begin_em_sequencia_de_comandos", "lineno": 125, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "test_inclui_comando_begin_em_sequencia_de_comandos", "()", "test_parser.py"], "setup": {"duration": 0.00031980499625205994, "outcome": "passed"}, "call": {"duration": 0.0038846000097692013, "outcome": "passed"}, "teardown": {"duration": 0.0003278920194134116, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_programa_completo_com_coment\u00e1rio", "lineno": 133, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "150147601", "()", "test_parser.py", "test_aceita_programa_completo_com_coment\u00e1rio"], "setup": {"duration": 0.00040533498395234346, "outcome": "passed"}, "call": {"duration": 0.010015611012931913, "outcome": "passed", "stdout": "Testando comando\n\n        ;; Fatorial\n        (define fat (lambda (n) \n            (if (<= n 1)\n                1\n                (* n (fat (- n 1))))))\n\n        (print (fat 5))\n        \n"}, "teardown": {"duration": 0.0004944659885950387, "outcome": "passed"}}]}