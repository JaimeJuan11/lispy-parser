{"created": 1607302285.715661, "duration": 0.18702912330627441, "exitcode": 1, "root": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/180117548", "environment": {"Python": "3.9.0", "Platform": "Linux-5.9.11-arch2-1-x86_64-with-glibc2.32", "Packages": {"pytest": "6.1.2", "py": "1.9.0", "pluggy": "0.13.1"}, "Plugins": {"json-report": "1.2.4", "metadata": "1.11.0", "hypothesis": "5.41.4"}}, "summary": {"passed": 9, "failed": 3, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test_parser.py", "type": "Module"}]}, {"nodeid": "test_parser.py::TestAnalisadorSintatico", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_elementos_atomicos", "type": "Function", "lineno": 69}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_simples", "type": "Function", "lineno": 81}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_aninhadas", "type": "Function", "lineno": 85}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_valor_com_quote", "type": "Function", "lineno": 89}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_listas_desalinhadas", "type": "Function", "lineno": 94}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_quotes_inv\u00e1lidos", "type": "Function", "lineno": 99}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_elementos_atomicos", "type": "Function", "lineno": 104}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_listas", "type": "Function", "lineno": 112}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_quotes", "type": "Function", "lineno": 116}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_chars", "type": "Function", "lineno": 120}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_inclui_comando_begin_em_sequencia_de_comandos", "type": "Function", "lineno": 125}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_programa_completo_com_coment\u00e1rio", "type": "Function", "lineno": 133}]}, {"nodeid": "test_parser.py::TestAnalisadorSintatico", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico", "type": "Instance"}]}, {"nodeid": "test_parser.py", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico", "type": "Class"}]}], "tests": [{"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_elementos_atomicos", "lineno": 69, "outcome": "passed", "keywords": ["test_aceita_elementos_atomicos", "TestAnalisadorSintatico", "180117548", "()", "test_parser.py"], "setup": {"duration": 0.00038151099579408765, "outcome": "passed"}, "call": {"duration": 0.04793037998024374, "outcome": "passed"}, "teardown": {"duration": 0.00027248699916526675, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_simples", "lineno": 81, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "180117548", "()", "test_aceita_listas_simples", "test_parser.py"], "setup": {"duration": 0.00027052100631408393, "outcome": "passed"}, "call": {"duration": 0.003642853000201285, "outcome": "passed"}, "teardown": {"duration": 0.0002605699992273003, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_aninhadas", "lineno": 85, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_aceita_listas_aninhadas", "180117548", "()", "test_parser.py"], "setup": {"duration": 0.00026760000037029386, "outcome": "passed"}, "call": {"duration": 0.007469724019756541, "outcome": "passed"}, "teardown": {"duration": 0.00029606002499349415, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_valor_com_quote", "lineno": 89, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "180117548", "()", "test_aceita_valor_com_quote", "test_parser.py"], "setup": {"duration": 0.00026974300271831453, "outcome": "passed"}, "call": {"duration": 0.003706447023432702, "outcome": "passed"}, "teardown": {"duration": 0.0002781829971354455, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_listas_desalinhadas", "lineno": 94, "outcome": "passed", "keywords": ["test_rejeita_listas_desalinhadas", "TestAnalisadorSintatico", "180117548", "()", "test_parser.py"], "setup": {"duration": 0.0002495689841452986, "outcome": "passed"}, "call": {"duration": 0.002066645014565438, "outcome": "passed"}, "teardown": {"duration": 0.0003238979843445122, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_quotes_inv\u00e1lidos", "lineno": 99, "outcome": "passed", "keywords": ["test_rejeita_quotes_inv\u00e1lidos", "TestAnalisadorSintatico", "180117548", "()", "test_parser.py"], "setup": {"duration": 0.00032287597423419356, "outcome": "passed"}, "call": {"duration": 0.0012583670031744987, "outcome": "passed"}, "teardown": {"duration": 0.00026496799546293914, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_elementos_atomicos", "lineno": 104, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "180117548", "test_converte_elementos_atomicos", "()", "test_parser.py"], "setup": {"duration": 0.00025392399402335286, "outcome": "passed"}, "call": {"duration": 0.0026032960158772767, "outcome": "passed"}, "teardown": {"duration": 0.00022348799393512309, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_listas", "lineno": 112, "outcome": "passed", "keywords": ["test_converte_listas", "TestAnalisadorSintatico", "180117548", "()", "test_parser.py"], "setup": {"duration": 0.0002497489913366735, "outcome": "passed"}, "call": {"duration": 0.004856699000811204, "outcome": "passed"}, "teardown": {"duration": 0.00024559401208534837, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_quotes", "lineno": 116, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_converte_quotes", "180117548", "()", "test_parser.py"], "setup": {"duration": 0.00026177099789492786, "outcome": "passed"}, "call": {"duration": 0.002794728003209457, "outcome": "passed"}, "teardown": {"duration": 0.0003540799953043461, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_chars", "lineno": 120, "outcome": "failed", "keywords": ["TestAnalisadorSintatico", "180117548", "test_converte_chars", "()", "test_parser.py"], "setup": {"duration": 0.00027813800261355937, "outcome": "passed"}, "call": {"duration": 0.0009172029967885464, "outcome": "failed", "crash": {"path": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/180117548/test_parser.py", "lineno": 122, "message": "AssertionError: assert Tree('char', [Token('CHAR', '#\\\\A')]) == 'A'\n +  where Tree('char', [Token('CHAR', '#\\\\A')]) = value('#\\\\A')"}, "traceback": [{"path": "test_parser.py", "lineno": 122, "message": "AssertionError"}], "longrepr": "self = <test_parser.TestAnalisadorSintatico object at 0x7f257a511d00>\n\n    def test_converte_chars(self):\n>       assert value(r\"#\\A\") == \"A\"\nE       AssertionError: assert Tree('char', [Token('CHAR', '#\\\\A')]) == 'A'\nE        +  where Tree('char', [Token('CHAR', '#\\\\A')]) = value('#\\\\A')\n\ntest_parser.py:122: AssertionError"}, "teardown": {"duration": 0.0003107980010099709, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_inclui_comando_begin_em_sequencia_de_comandos", "lineno": 125, "outcome": "failed", "keywords": ["TestAnalisadorSintatico", "180117548", "()", "test_parser.py", "test_inclui_comando_begin_em_sequencia_de_comandos"], "setup": {"duration": 0.0002702479832805693, "outcome": "passed"}, "call": {"duration": 0.001424588990630582, "outcome": "failed", "crash": {"path": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/180117548/test_parser.py", "lineno": 127, "message": "assert \"No terminal defined for '(' at line 2 col 1\\n\\n(cmd 2)\\n^\\n\" == [Symbol(value='begin'), [Symbol(value='cmd'), 1], [Symbol(value='cmd'), 2]]\n +  where \"No terminal defined for '(' at line 2 col 1\\n\\n(cmd 2)\\n^\\n\" = value('(cmd 1)\\n(cmd 2)')"}, "traceback": [{"path": "test_parser.py", "lineno": 127, "message": "AssertionError"}], "longrepr": "self = <test_parser.TestAnalisadorSintatico object at 0x7f257a57aac0>\n\n    def test_inclui_comando_begin_em_sequencia_de_comandos(self):\n>       assert value(\"(cmd 1)\\n(cmd 2)\") == [\n            symbol(\"begin\"),\n            [symbol(\"cmd\"), 1],\n            [symbol(\"cmd\"), 2],\n        ]\nE       assert \"No terminal defined for '(' at line 2 col 1\\n\\n(cmd 2)\\n^\\n\" == [Symbol(value='begin'), [Symbol(value='cmd'), 1], [Symbol(value='cmd'), 2]]\nE        +  where \"No terminal defined for '(' at line 2 col 1\\n\\n(cmd 2)\\n^\\n\" = value('(cmd 1)\\n(cmd 2)')\n\ntest_parser.py:127: AssertionError"}, "teardown": {"duration": 0.0003062149917241186, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_programa_completo_com_coment\u00e1rio", "lineno": 133, "outcome": "failed", "keywords": ["TestAnalisadorSintatico", "180117548", "()", "test_aceita_programa_completo_com_coment\u00e1rio", "test_parser.py"], "setup": {"duration": 0.0002506809832993895, "outcome": "passed"}, "call": {"duration": 0.008038784988457337, "outcome": "failed", "crash": {"path": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/180117548/test_parser.py", "lineno": 147, "message": "assert \"No terminal defined for '(' at line 8 col 9\\n\\n        (print (fat 5))\\n        ^\\n\" == [Symbol(value='begin'), [Symbol(value='define'), Symbol(value='fat'), [Symbol(value='lambda'), [Symbol(value='n')], [S...bol(value='*'), Symbol(value='n'), [Symbol(value='fat'), [...]]]]]], [Symbol(value='print'), [Symbol(value='fat'), 5]]]\n +  where \"No terminal defined for '(' at line 8 col 9\\n\\n        (print (fat 5))\\n        ^\\n\" = value('\\n        ;; Fatorial\\n        (define fat (lambda (n) \\n            (if (<= n 1)\\n                1\\n                (* n (fat (- n 1))))))\\n\\n        (print (fat 5))\\n        ')"}, "traceback": [{"path": "test_parser.py", "lineno": 147, "message": "AssertionError"}], "stdout": "Testando comando\n\n        ;; Fatorial\n        (define fat (lambda (n) \n            (if (<= n 1)\n                1\n                (* n (fat (- n 1))))))\n\n        (print (fat 5))\n        \n", "longrepr": "self = <test_parser.TestAnalisadorSintatico object at 0x7f257a452ca0>\n\n    def test_aceita_programa_completo_com_coment\u00e1rio(self):\n        src = \"\"\"\n        ;; Fatorial\n        (define fat (lambda (n)\n            (if (<= n 1)\n                1\n                (* n (fat (- n 1))))))\n    \n        (print (fat 5))\n        \"\"\"\n        print(\"Testando comando\")\n        print(src)\n        s = symbol\n>       assert value(src) == [\n            s(\"begin\"),\n            [\n                s(\"define\"),\n                s(\"fat\"),\n                [\n                    s(\"lambda\"),\n                    [s(\"n\")],\n                    [\n                        s(\"if\"),\n                        [s(\"<=\"), s(\"n\"), 1],\n                        1,\n                        [s(\"*\"), s(\"n\"), [s(\"fat\"), [s(\"-\"), s(\"n\"), 1]]],\n                    ],\n                ],\n            ],\n            [s(\"print\"), [s(\"fat\"), 5]],\n        ]\nE       assert \"No terminal defined for '(' at line 8 col 9\\n\\n        (print (fat 5))\\n        ^\\n\" == [Symbol(value='begin'), [Symbol(value='define'), Symbol(value='fat'), [Symbol(value='lambda'), [Symbol(value='n')], [S...bol(value='*'), Symbol(value='n'), [Symbol(value='fat'), [...]]]]]], [Symbol(value='print'), [Symbol(value='fat'), 5]]]\nE        +  where \"No terminal defined for '(' at line 8 col 9\\n\\n        (print (fat 5))\\n        ^\\n\" = value('\\n        ;; Fatorial\\n        (define fat (lambda (n) \\n            (if (<= n 1)\\n                1\\n                (* n (fat (- n 1))))))\\n\\n        (print (fat 5))\\n        ')\n\ntest_parser.py:147: AssertionError"}, "teardown": {"duration": 0.0003018309944309294, "outcome": "passed"}}]}