{"created": 1607302263.8704607, "duration": 0.2236030101776123, "exitcode": 1, "root": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/160037522", "environment": {"Python": "3.9.0", "Platform": "Linux-5.9.11-arch2-1-x86_64-with-glibc2.32", "Packages": {"pytest": "6.1.2", "py": "1.9.0", "pluggy": "0.13.1"}, "Plugins": {"json-report": "1.2.4", "metadata": "1.11.0", "hypothesis": "5.41.4"}}, "summary": {"passed": 10, "failed": 2, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test_parser.py", "type": "Module"}]}, {"nodeid": "test_parser.py::TestAnalisadorSintatico", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_elementos_atomicos", "type": "Function", "lineno": 69}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_simples", "type": "Function", "lineno": 81}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_aninhadas", "type": "Function", "lineno": 85}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_valor_com_quote", "type": "Function", "lineno": 89}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_listas_desalinhadas", "type": "Function", "lineno": 94}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_quotes_inv\u00e1lidos", "type": "Function", "lineno": 99}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_elementos_atomicos", "type": "Function", "lineno": 104}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_listas", "type": "Function", "lineno": 112}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_quotes", "type": "Function", "lineno": 116}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_chars", "type": "Function", "lineno": 120}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_inclui_comando_begin_em_sequencia_de_comandos", "type": "Function", "lineno": 125}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_programa_completo_com_coment\u00e1rio", "type": "Function", "lineno": 133}]}, {"nodeid": "test_parser.py::TestAnalisadorSintatico", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico", "type": "Instance"}]}, {"nodeid": "test_parser.py", "outcome": "passed", "result": [{"nodeid": "test_parser.py::TestAnalisadorSintatico", "type": "Class"}]}], "tests": [{"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_elementos_atomicos", "lineno": 69, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "160037522", "()", "test_aceita_elementos_atomicos"], "setup": {"duration": 0.0004721400036942214, "outcome": "passed"}, "call": {"duration": 0.05974699099897407, "outcome": "passed"}, "teardown": {"duration": 0.0003609779814723879, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_simples", "lineno": 81, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "160037522", "test_aceita_listas_simples", "()"], "setup": {"duration": 0.00029701198218390346, "outcome": "passed"}, "call": {"duration": 0.00588781398255378, "outcome": "passed"}, "teardown": {"duration": 0.0003350940241944045, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_listas_aninhadas", "lineno": 85, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "test_aceita_listas_aninhadas", "160037522", "()"], "setup": {"duration": 0.0003337170055601746, "outcome": "passed"}, "call": {"duration": 0.01332130198716186, "outcome": "passed"}, "teardown": {"duration": 0.0005228400113992393, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_valor_com_quote", "lineno": 89, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "test_aceita_valor_com_quote", "160037522", "()"], "setup": {"duration": 0.00040061300387606025, "outcome": "passed"}, "call": {"duration": 0.005798164987936616, "outcome": "passed"}, "teardown": {"duration": 0.00036947999615222216, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_listas_desalinhadas", "lineno": 94, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "test_rejeita_listas_desalinhadas", "160037522", "()"], "setup": {"duration": 0.0002687450032681227, "outcome": "passed"}, "call": {"duration": 0.00382086998433806, "outcome": "passed"}, "teardown": {"duration": 0.0003012899833265692, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_rejeita_quotes_inv\u00e1lidos", "lineno": 99, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "160037522", "test_rejeita_quotes_inv\u00e1lidos", "()"], "setup": {"duration": 0.0003446220071054995, "outcome": "passed"}, "call": {"duration": 0.0016645699797663838, "outcome": "passed"}, "teardown": {"duration": 0.0003528649976942688, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_elementos_atomicos", "lineno": 104, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_converte_elementos_atomicos", "test_parser.py", "160037522", "()"], "setup": {"duration": 0.00037905998760834336, "outcome": "passed"}, "call": {"duration": 0.0024040360003709793, "outcome": "passed"}, "teardown": {"duration": 0.000332105002598837, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_listas", "lineno": 112, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "160037522", "()", "test_converte_listas"], "setup": {"duration": 0.00038022600347176194, "outcome": "passed"}, "call": {"duration": 0.010545915021793917, "outcome": "passed"}, "teardown": {"duration": 0.00036108598578721285, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_quotes", "lineno": 116, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "160037522", "()", "test_converte_quotes"], "setup": {"duration": 0.00039956902037374675, "outcome": "passed"}, "call": {"duration": 0.004561073001241311, "outcome": "passed"}, "teardown": {"duration": 0.00039315299363806844, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_converte_chars", "lineno": 120, "outcome": "passed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "160037522", "test_converte_chars", "()"], "setup": {"duration": 0.00042265900992788374, "outcome": "passed"}, "call": {"duration": 0.0016820159798953682, "outcome": "passed"}, "teardown": {"duration": 0.00035995201324112713, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_inclui_comando_begin_em_sequencia_de_comandos", "lineno": 125, "outcome": "failed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "test_inclui_comando_begin_em_sequencia_de_comandos", "160037522", "()"], "setup": {"duration": 0.0004090610018465668, "outcome": "passed"}, "call": {"duration": 0.002721405995544046, "outcome": "failed", "crash": {"path": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/160037522/test_parser.py", "lineno": 127, "message": "assert \"No terminal defined for '(' at line 2 col 1\\n\\n(cmd 2)\\n^\\n\" == [Symbol(value='begin'), [Symbol(value='cmd'), 1], [Symbol(value='cmd'), 2]]\n +  where \"No terminal defined for '(' at line 2 col 1\\n\\n(cmd 2)\\n^\\n\" = value('(cmd 1)\\n(cmd 2)')"}, "traceback": [{"path": "test_parser.py", "lineno": 127, "message": "AssertionError"}], "longrepr": "self = <test_parser.TestAnalisadorSintatico object at 0x7f184b7c8fd0>\n\n    def test_inclui_comando_begin_em_sequencia_de_comandos(self):\n>       assert value(\"(cmd 1)\\n(cmd 2)\") == [\n            symbol(\"begin\"),\n            [symbol(\"cmd\"), 1],\n            [symbol(\"cmd\"), 2],\n        ]\nE       assert \"No terminal defined for '(' at line 2 col 1\\n\\n(cmd 2)\\n^\\n\" == [Symbol(value='begin'), [Symbol(value='cmd'), 1], [Symbol(value='cmd'), 2]]\nE        +  where \"No terminal defined for '(' at line 2 col 1\\n\\n(cmd 2)\\n^\\n\" = value('(cmd 1)\\n(cmd 2)')\n\ntest_parser.py:127: AssertionError"}, "teardown": {"duration": 0.00043930902029387653, "outcome": "passed"}}, {"nodeid": "test_parser.py::TestAnalisadorSintatico::test_aceita_programa_completo_com_coment\u00e1rio", "lineno": 133, "outcome": "failed", "keywords": ["TestAnalisadorSintatico", "test_parser.py", "160037522", "test_aceita_programa_completo_com_coment\u00e1rio", "()"], "setup": {"duration": 0.00040672800969332457, "outcome": "passed"}, "call": {"duration": 0.001616383990040049, "outcome": "failed", "crash": {"path": "/home/chips/aulas/compiladores/trabalhos/lispy-parser/run/160037522/test_parser.py", "lineno": 147, "message": "assert \"No terminal defined for ';' at line 2 col 9\\n\\n        ;; Fatorial\\n        ^\\n\\nExpecting: {'__ANON_0', '__ANON_1', 'A', 'NUMBER', 'QUOTE', 'SYMBOL', 'OP', 'LPAR', 'STRING'}\\n\" == [Symbol(value='begin'), [Symbol(value='define'), Symbol(value='fat'), [Symbol(value='lambda'), [Symbol(value='n')], [S...bol(value='*'), Symbol(value='n'), [Symbol(value='fat'), [...]]]]]], [Symbol(value='print'), [Symbol(value='fat'), 5]]]\n +  where \"No terminal defined for ';' at line 2 col 9\\n\\n        ;; Fatorial\\n        ^\\n\\nExpecting: {'__ANON_0', '__ANON_1', 'A', 'NUMBER', 'QUOTE', 'SYMBOL', 'OP', 'LPAR', 'STRING'}\\n\" = value('\\n        ;; Fatorial\\n        (define fat (lambda (n) \\n            (if (<= n 1)\\n                1\\n                (* n (fat (- n 1))))))\\n\\n        (print (fat 5))\\n        ')"}, "traceback": [{"path": "test_parser.py", "lineno": 147, "message": "AssertionError"}], "stdout": "Testando comando\n\n        ;; Fatorial\n        (define fat (lambda (n) \n            (if (<= n 1)\n                1\n                (* n (fat (- n 1))))))\n\n        (print (fat 5))\n        \n", "longrepr": "self = <test_parser.TestAnalisadorSintatico object at 0x7f184b790b50>\n\n    def test_aceita_programa_completo_com_coment\u00e1rio(self):\n        src = \"\"\"\n        ;; Fatorial\n        (define fat (lambda (n)\n            (if (<= n 1)\n                1\n                (* n (fat (- n 1))))))\n    \n        (print (fat 5))\n        \"\"\"\n        print(\"Testando comando\")\n        print(src)\n        s = symbol\n>       assert value(src) == [\n            s(\"begin\"),\n            [\n                s(\"define\"),\n                s(\"fat\"),\n                [\n                    s(\"lambda\"),\n                    [s(\"n\")],\n                    [\n                        s(\"if\"),\n                        [s(\"<=\"), s(\"n\"), 1],\n                        1,\n                        [s(\"*\"), s(\"n\"), [s(\"fat\"), [s(\"-\"), s(\"n\"), 1]]],\n                    ],\n                ],\n            ],\n            [s(\"print\"), [s(\"fat\"), 5]],\n        ]\nE       assert \"No terminal defined for ';' at line 2 col 9\\n\\n        ;; Fatorial\\n        ^\\n\\nExpecting: {'__ANON_0', '__ANON_1', 'A', 'NUMBER', 'QUOTE', 'SYMBOL', 'OP', 'LPAR', 'STRING'}\\n\" == [Symbol(value='begin'), [Symbol(value='define'), Symbol(value='fat'), [Symbol(value='lambda'), [Symbol(value='n')], [S...bol(value='*'), Symbol(value='n'), [Symbol(value='fat'), [...]]]]]], [Symbol(value='print'), [Symbol(value='fat'), 5]]]\nE        +  where \"No terminal defined for ';' at line 2 col 9\\n\\n        ;; Fatorial\\n        ^\\n\\nExpecting: {'__ANON_0', '__ANON_1', 'A', 'NUMBER', 'QUOTE', 'SYMBOL', 'OP', 'LPAR', 'STRING'}\\n\" = value('\\n        ;; Fatorial\\n        (define fat (lambda (n) \\n            (if (<= n 1)\\n                1\\n                (* n (fat (- n 1))))))\\n\\n        (print (fat 5))\\n        ')\n\ntest_parser.py:147: AssertionError"}, "teardown": {"duration": 0.00044325602357275784, "outcome": "passed"}}]}